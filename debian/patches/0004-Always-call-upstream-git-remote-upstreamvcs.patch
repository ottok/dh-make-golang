From: =?utf-8?b?T3R0byBLZWvDpGzDpGluZW4=?= <otto@debian.org>
Date: Thu, 21 Nov 2024 00:18:30 -0800
Subject: Always call upstream git remote `upstreamvcs`

Instead of using various different upstream remote names, use the one
and same upstream git remote name consistently. As the name pick
`upstreamvcs` just as git-buildpackage does, so that if anybody runs
`gbp clone` they will automatically end up with the same git remotes and
branches as anyone in to go-team.
---
 make.go | 29 ++++++++++++++++++-----------
 1 file changed, 18 insertions(+), 11 deletions(-)

diff --git a/make.go b/make.go
index 74e45e3..5fbe5c4 100644
--- a/make.go
+++ b/make.go
@@ -418,6 +418,14 @@ func runGitCommandIn(dir string, arg ...string) error {
 func createGitRepository(debsrc, gopkg, orig string, u *upstream,
 	includeUpstreamHistory bool, allowUnknownHoster bool, debianBranch string,
 	dep14 bool, pristineTar bool) (string, error) {
+
+	// debianBranch is passed in function call, but upstream import branch needs
+	// also to be defined
+	upstreamImportBranch := "upstream"
+	if dep14 {
+		upstreamImportBranch = "upstream/latest"
+	}
+
 	wd, err := os.Getwd()
 	if err != nil {
 		return "", fmt.Errorf("get cwd: %w", err)
@@ -463,7 +471,8 @@ func createGitRepository(debsrc, gopkg, orig string, u *upstream,
 
 	// Preconfigure branches
 
-	branches := []string{debianBranch, "upstream/latest"}
+	branches := []string{debianBranch, upstreamImportBranch}
+
 	if pristineTar {
 		branches = append(branches, "pristine-tar")
 	}
@@ -477,13 +486,8 @@ func createGitRepository(debsrc, gopkg, orig string, u *upstream,
 	}
 
 	if includeUpstreamHistory {
-		u.remote, err = shortHostName(gopkg, allowUnknownHoster)
-		if err != nil {
-			return dir, fmt.Errorf("unable to fetch upstream history: %q", err)
-		}
-		if u.remote == "debian" {
-			u.remote = "salsa"
-		}
+		// Always call the upstream git remote 'upstreamvcs' just like git-buildpackage does
+		u.remote = "upstreamvcs"
 		log.Printf("Adding remote %q with URL %q\n", u.remote, u.rr.Repo)
 		if err := runGitCommandIn(dir, "remote", "add", u.remote, u.rr.Repo); err != nil {
 			return dir, fmt.Errorf("git remote add %s %s: %w", u.remote, u.rr.Repo, err)
@@ -495,10 +499,13 @@ func createGitRepository(debsrc, gopkg, orig string, u *upstream,
 	}
 
 	// Import upstream orig tarball
+	// (and release git tag if includeUpstreamHistory)
 
-	arg := []string{"import-orig", "--no-interactive", "--debian-branch=" + debianBranch}
-	if dep14 {
-		arg = append(arg, "--upstream-branch=upstream/latest")
+	arg := []string{
+		"import-orig",
+		"--no-interactive",
+		"--debian-branch=" + debianBranch,
+		"--upstream-branch=" + upstreamImportBranch,
 	}
 	if pristineTar {
 		arg = append(arg, "--pristine-tar")
